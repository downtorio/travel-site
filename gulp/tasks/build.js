/*
	* Our compiled code/library aka the final build of our website (dist = distribution)

	* This is what we send up to the server. It includes optimized images and the compiled css and javascript files referenced in our html file (instead of, say, each individual module in its own individual directory/file), compressed in file size and revisioned (adding a unique string of numbers and letters at the end of the file name to force browsers to redownload the file if we've uplaoded a changed version of it; basically it serves as a cache-buster for web browsers)
	
	* NOW! Typically the final directory containing all our compressed/server-ready files is called 'dist'. But we're gonna change it to 'docs' just because we're hosting this site on github, and they require the final directory to be named 'docs' instead. That's the only reason. Just FYI. 
 */


var gulp = require('gulp'),
	cssnano = require('gulp-cssnano'),			//compresses our css files
	del = require('del'),
	imagemin = require('gulp-imagemin'),
	rev = require('gulp-rev'),					//revisions our files
	uglify = require('gulp-uglify'),			//compresses our js files
	usemin = require('gulp-usemin'),
	browserSync = require('browser-sync').create();


//so we can get browserSync to watch for changes in the 'dist' folder (instead of just the regular 'app' folder) and refresh our browser accordingly -- 'gulp previewDist' instead of 'gulp watch'
gulp.task('previewDist', function() {
	browserSync.init({
		notify: false,
		server: {
			//baseDir: "dist"
			baseDir: 'docs'
		}
	});
});


//deletes dist(docs) folder first before updating it with new contents, so we don't have multiple copies of different versions of our site/app
//'icons' is listed as dependency because 'deleteDistFolder' is listed as a dependency down the line to 'optimizeImages' and 'usemin', and we don't want either to run until we have an updated version of our sprites, as generated by the 'icons' task
gulp.task('deleteDistFolder', ['icons'], function() {
	return del('./docs');
});


//this isn't for anything specific that we have on file right now, but for future hypothetical files that get added on at a later date inside 'app/', and are placed in other directories than we would have intended
gulp.task('copyGeneralFiles', ['deleteDistFolder'], function() {
	
	//this is just to keep files organized; too many to fit in one line so put em in a variable
	//we're excluding index,images,styles,etc cuz we already have tasks for those a few lines down in this file
	var pathsToCopy = [
		'./app/**/*',
		'!./app/index.html',
		'!./app/assets/images/**',
		'!./app/assets/styles/**',
		'!./app/assets/scripts/**',
		'!./app/temp',
		'!./app/temp/**'
	];

	return gulp.src(pathsToCopy)
			   .pipe(gulp.dest('./docs'));
});


//'icons' is listed as dependency to tell gulp to run our 'icons' task before compressing our images, just to ensure we have the latest versions of our sprites
//correction: 'icons' WAS listed as a dependency here. we moved it up to 'deleteDistFolder'
gulp.task('optimizeImages', ['deleteDistFolder'], function() {
	return gulp.src(['./app/assets/images/**/*', '!./app/assets/images/icons', '!./app/assets/images/icons/**/*'])		//remember ! means exclude or 'not'
			   .pipe(imagemin({
			   		progressive: true,	//for jpg
			   		interlaced: true,	//for gif
			   		multipass: true		//for svg
			   }))
			   .pipe(gulp.dest('./docs/assets/images'));
});


//this is all for dependency's sake. we don't want 'usemin' to start unless 'deleteDistFolder' and all ITS dependencies are through
gulp.task('useminTrigger', ['deleteDistFolder'], function() {
	gulp.start('usemin');
});


//'styles' and 'scripts' are listed as dependencies to tell gulp to trigger fresh rebuilds of our 'styles' and 'scripts' tasks before running usemin, to ensure we have the latest versions of our css and js files
gulp.task('usemin', ['styles', 'scripts'], function() {
	return gulp.src('./app/index.html')
			   .pipe(usemin({
			   		css: [function() {return rev()}, function() {return cssnano()}],
			   		js: [function() {return rev()}, function() {return uglify()}]
			   }))
			   .pipe(gulp.dest('./docs'));
});


gulp.task('build', ['deleteDistFolder', 'copyGeneralFiles', 'optimizeImages', 'useminTrigger']);